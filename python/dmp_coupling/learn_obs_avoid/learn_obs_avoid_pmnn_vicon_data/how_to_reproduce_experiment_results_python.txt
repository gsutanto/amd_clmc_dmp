Execution Order for Reproducing Experimental Results in Python:
**---------------- Learning (Initial) Feedback/Coupling Term Model on TensorFlow and Its Verification ----------------**
  [1] Prepare the Training and Generalization Testing Dataset, by running the following scripts in amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/learn_obs_avoid_pmnn_vicon_data/ in Python:
      >> on Spyder: convertDemoToSupervisedObsAvoidFbDataset.py 
                    => tf_obs_avoid_data_preparation_robot_unroll.py
  [2] Perform Initial Learning of Feedback Model in TensorFlow in Python:
      >> on Spyder: amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/tf/learn_obs_avoid_feedback_w_PMNN.py
      (ensuring (is_performing_generalization_test == 0) on line 49 is selected...)
  [3] Using helper MATLAB script amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/tf/models/compare_nmse_generalization_among_reinits.m ,
      inspect and compare among the prim_1_nmse_reinit_<y>_step_<TF_max_train_iters>.mat files for y in [0,1,2], 
      and manually select y which has the best (lowest) nmse_generalization_test.
      Suppose y_{best}=2;
      then write/update the file amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/tf/models/reinit_selection_idx.txt with content:
      "2" (without the double quotes when writing in the file of course...).
  [4] Test the trained Feedback Model performing prediction on unseen demonstration/trial in TensorFlow in Python:
      >> on Spyder: amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/tf/test_learned_obs_avoid_feedback_w_PMNN.py
**---------------- Iterative Learning and Unrolling of Feedback/Coupling Term Model on TensorFlow ----------------**
  [5] Perform Iterative Learning and Unrolling of Feedback Model in TensorFlow in Python, there are two alternatives:
      (a) Always unrolling the entire segment of each trajectory:
          >> on Spyder: amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/learn_obs_avoid_pmnn_vicon_data/iterative_learn_unroll_obs_avoid_feedback_w_PMNN.py
      (b) Iteratively unrolling some percentage of each trajectory segment, e.g.: iteratively learn on the 1st 5%, 10%, 15%, ..., 100% of each trajectory segment
**---------------- Unrolling Test of the Learned Feedback/Coupling Term Model with Dynamics on All Considered Settings ----------------**
  [6] Execute the unrolling test of the learned feedback/coupling term model, with dynamics, on all considered settings:
      >> on Spyder: amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/learn_obs_avoid_pmnn_vicon_data/test_unroll_learned_pmnn_obs_avoid_fb.py
         Before executing this script, the model parameter file needs to be specified in line 54/55, e.g.:
         pmnn_model_file_path = pmnn_model_parent_dir_path + 'iterative_learn_unroll/prim_1_params_step_0005500.mat'
  [7] Compute the NMSE of the with-dynamics unrolling:
      >> on Spyder: amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/learn_obs_avoid_pmnn_vicon_data/evaluate_NMSE_unroll.py
**---------------- Saving the Parameters into Text Files (for Loading by a C++ Program), after Iterative Learning and Unrolling of Feedback/Coupling Term Model on TensorFlow ----------------**
  [8] Save the learned parameters into text files (for further loading by a C++ program), after the iterative learning and unrolling of the feedback model:
      >> on Spyder: amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/learn_obs_avoid_pmnn_vicon_data/update_learn_obs_avoid_data_after_TF_iterative_learn_unroll.py
         Before executing this script, the model parameter file needs to be specified in line 45, e.g.:
         init_model_param_filepath = model_parent_dir_path + 'iterative_learn_unroll/prim_1_params_step_0005500.mat'
**---------------- Some Additional Visualizations ----------------**
  [9] Visualize coupling terms data (extracted from demonstrations), either time-stretched or NOT time-stretched:
      >> on Spyder: amd_clmc_dmp/python/dmp_coupling/utilities/visualizeX_and_Ct.py
 [10] Visualize a particular setting (obstacle position and demonstrations trajectory data):
      >> on Spyder: amd_clmc_dmp/python/dmp_coupling/learn_obs_avoid/visualizeSetting.py
